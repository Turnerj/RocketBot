// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rlbot.flat
{

using global::System;
using global::FlatBuffers;

public struct TeamInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TeamInfo GetRootAsTeamInfo(ByteBuffer _bb) { return GetRootAsTeamInfo(_bb, new TeamInfo()); }
  public static TeamInfo GetRootAsTeamInfo(ByteBuffer _bb, TeamInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TeamInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TeamIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// number of goals scored.
  public int Score { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<TeamInfo> CreateTeamInfo(FlatBufferBuilder builder,
      int teamIndex = 0,
      int score = 0) {
    builder.StartObject(2);
    TeamInfo.AddScore(builder, score);
    TeamInfo.AddTeamIndex(builder, teamIndex);
    return TeamInfo.EndTeamInfo(builder);
  }

  public static void StartTeamInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTeamIndex(FlatBufferBuilder builder, int teamIndex) { builder.AddInt(0, teamIndex, 0); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(1, score, 0); }
  public static Offset<TeamInfo> EndTeamInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TeamInfo>(o);
  }
};


}
