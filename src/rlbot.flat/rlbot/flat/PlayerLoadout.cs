// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rlbot.flat
{

using global::System;
using global::FlatBuffers;

/// The car type, color, and other aspects of the player's appearance.
/// See https://github.com/RLBot/RLBot/wiki/Bot-Customization
public struct PlayerLoadout : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerLoadout GetRootAsPlayerLoadout(ByteBuffer _bb) { return GetRootAsPlayerLoadout(_bb, new PlayerLoadout()); }
  public static PlayerLoadout GetRootAsPlayerLoadout(ByteBuffer _bb, PlayerLoadout obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerLoadout __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TeamColorId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CustomColorId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CarId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DecalId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int WheelsId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BoostId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AntennaId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HatId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PaintFinishId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CustomFinishId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EngineAudioId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TrailsId { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int GoalExplosionId { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public LoadoutPaint? LoadoutPaint { get { int o = __p.__offset(30); return o != 0 ? (LoadoutPaint?)(new LoadoutPaint()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<PlayerLoadout> CreatePlayerLoadout(FlatBufferBuilder builder,
      int teamColorId = 0,
      int customColorId = 0,
      int carId = 0,
      int decalId = 0,
      int wheelsId = 0,
      int boostId = 0,
      int antennaId = 0,
      int hatId = 0,
      int paintFinishId = 0,
      int customFinishId = 0,
      int engineAudioId = 0,
      int trailsId = 0,
      int goalExplosionId = 0,
      Offset<LoadoutPaint> loadoutPaintOffset = default(Offset<LoadoutPaint>)) {
    builder.StartObject(14);
    PlayerLoadout.AddLoadoutPaint(builder, loadoutPaintOffset);
    PlayerLoadout.AddGoalExplosionId(builder, goalExplosionId);
    PlayerLoadout.AddTrailsId(builder, trailsId);
    PlayerLoadout.AddEngineAudioId(builder, engineAudioId);
    PlayerLoadout.AddCustomFinishId(builder, customFinishId);
    PlayerLoadout.AddPaintFinishId(builder, paintFinishId);
    PlayerLoadout.AddHatId(builder, hatId);
    PlayerLoadout.AddAntennaId(builder, antennaId);
    PlayerLoadout.AddBoostId(builder, boostId);
    PlayerLoadout.AddWheelsId(builder, wheelsId);
    PlayerLoadout.AddDecalId(builder, decalId);
    PlayerLoadout.AddCarId(builder, carId);
    PlayerLoadout.AddCustomColorId(builder, customColorId);
    PlayerLoadout.AddTeamColorId(builder, teamColorId);
    return PlayerLoadout.EndPlayerLoadout(builder);
  }

  public static void StartPlayerLoadout(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddTeamColorId(FlatBufferBuilder builder, int teamColorId) { builder.AddInt(0, teamColorId, 0); }
  public static void AddCustomColorId(FlatBufferBuilder builder, int customColorId) { builder.AddInt(1, customColorId, 0); }
  public static void AddCarId(FlatBufferBuilder builder, int carId) { builder.AddInt(2, carId, 0); }
  public static void AddDecalId(FlatBufferBuilder builder, int decalId) { builder.AddInt(3, decalId, 0); }
  public static void AddWheelsId(FlatBufferBuilder builder, int wheelsId) { builder.AddInt(4, wheelsId, 0); }
  public static void AddBoostId(FlatBufferBuilder builder, int boostId) { builder.AddInt(5, boostId, 0); }
  public static void AddAntennaId(FlatBufferBuilder builder, int antennaId) { builder.AddInt(6, antennaId, 0); }
  public static void AddHatId(FlatBufferBuilder builder, int hatId) { builder.AddInt(7, hatId, 0); }
  public static void AddPaintFinishId(FlatBufferBuilder builder, int paintFinishId) { builder.AddInt(8, paintFinishId, 0); }
  public static void AddCustomFinishId(FlatBufferBuilder builder, int customFinishId) { builder.AddInt(9, customFinishId, 0); }
  public static void AddEngineAudioId(FlatBufferBuilder builder, int engineAudioId) { builder.AddInt(10, engineAudioId, 0); }
  public static void AddTrailsId(FlatBufferBuilder builder, int trailsId) { builder.AddInt(11, trailsId, 0); }
  public static void AddGoalExplosionId(FlatBufferBuilder builder, int goalExplosionId) { builder.AddInt(12, goalExplosionId, 0); }
  public static void AddLoadoutPaint(FlatBufferBuilder builder, Offset<LoadoutPaint> loadoutPaintOffset) { builder.AddOffset(13, loadoutPaintOffset.Value, 0); }
  public static Offset<PlayerLoadout> EndPlayerLoadout(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerLoadout>(o);
  }
};


}
