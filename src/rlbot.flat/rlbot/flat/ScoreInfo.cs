// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rlbot.flat
{

using global::System;
using global::FlatBuffers;

public struct ScoreInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ScoreInfo GetRootAsScoreInfo(ByteBuffer _bb) { return GetRootAsScoreInfo(_bb, new ScoreInfo()); }
  public static ScoreInfo GetRootAsScoreInfo(ByteBuffer _bb, ScoreInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ScoreInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Score { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Goals { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OwnGoals { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Assists { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Saves { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Shots { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Demolitions { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ScoreInfo> CreateScoreInfo(FlatBufferBuilder builder,
      int score = 0,
      int goals = 0,
      int ownGoals = 0,
      int assists = 0,
      int saves = 0,
      int shots = 0,
      int demolitions = 0) {
    builder.StartObject(7);
    ScoreInfo.AddDemolitions(builder, demolitions);
    ScoreInfo.AddShots(builder, shots);
    ScoreInfo.AddSaves(builder, saves);
    ScoreInfo.AddAssists(builder, assists);
    ScoreInfo.AddOwnGoals(builder, ownGoals);
    ScoreInfo.AddGoals(builder, goals);
    ScoreInfo.AddScore(builder, score);
    return ScoreInfo.EndScoreInfo(builder);
  }

  public static void StartScoreInfo(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(0, score, 0); }
  public static void AddGoals(FlatBufferBuilder builder, int goals) { builder.AddInt(1, goals, 0); }
  public static void AddOwnGoals(FlatBufferBuilder builder, int ownGoals) { builder.AddInt(2, ownGoals, 0); }
  public static void AddAssists(FlatBufferBuilder builder, int assists) { builder.AddInt(3, assists, 0); }
  public static void AddSaves(FlatBufferBuilder builder, int saves) { builder.AddInt(4, saves, 0); }
  public static void AddShots(FlatBufferBuilder builder, int shots) { builder.AddInt(5, shots, 0); }
  public static void AddDemolitions(FlatBufferBuilder builder, int demolitions) { builder.AddInt(6, demolitions, 0); }
  public static Offset<ScoreInfo> EndScoreInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ScoreInfo>(o);
  }
};


}
